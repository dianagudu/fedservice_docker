{
  "entity": {
    "entity_id": "https://op.localhost",
    "key_config": {
      "private_path": "private/fed_keys.json",
      "key_defs": [
        {
          "type": "RSA",
          "use": [
            "sig"
          ]
        },
        {
          "type": "EC",
          "crv": "P-256",
          "use": [
            "sig"
          ]
        }
      ],
      "public_path": "static/fed_keys.json",
      "read_only": false
    },
    "authority_hints": "file:authority_hints.json",
    "trust_anchors": "file:trust_anchors.json",
    "endpoints": ["entity_configuration"]
  },
  "entity_type": {
    "openid_provider": {
      "base_url": "https://op.localhost",
        "httpc_params": {
          "verify": false
        },
        "session_key": {
          "filename": "private/session_jwk.json",
          "type": "OCT",
          "use": "sig"
        },
        "preference": {
          "subject_types_supported": [
            "public",
            "pairwise"
          ],
          "grant_types_supported": [
            "authorization_code",
            "implicit",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
            "refresh_token"
          ]
        },
        "template_dir": "templates",
        "token_handler_args": {
          "jwks_def": {
            "private_path": "private/token_jwk.json",
            "public_path": "static/token_jwk.json",
            "read_only": false,
            "key_defs": [
              {
                "type": "oct",
                "bytes": 24,
                "use": [
                  "enc"
                ],
                "kid": "code"
              },
              {
                "type": "oct",
                "bytes": 24,
                "use": [
                  "enc"
                ],
                "kid": "refresh"
              }
            ]
          },
          "code": {
            "lifetime": 600
          },
          "token": {
            "class": "idpyoidc.server.token.jwt_token.JWTToken",
            "lifetime": 3600,
            "add_claims": [
              "email",
              "email_verified",
              "phone_number",
              "phone_number_verified"
            ],
            "add_claim_by_scope": true,
            "aud": [
              "https://example.org/appl"
            ]
          },
          "refresh": {
            "lifetime": 86400
          },
          "id_token": {
            "class": "idpyoidc.server.token.id_token.IDToken",
            "kwargs": {
              "base_claims": {
                "email": {
                  "essential": true
                },
                "email_verified": {
                  "essential": true
                }
              }
            }
          }
        },
        "keys": {
          "private_path": "private/jwks.json",
          "key_defs": [
            {
              "type": "RSA",
              "use": [
                "sig"
              ]
            },
            {
              "type": "EC",
              "crv": "P-256",
              "use": [
                "sig"
              ]
            }
          ],
          "public_path": "static/jwks.json",
          "read_only": false,
          "uri_path": "static/jwks.json"
        },
        "endpoint": {
          "webfinger": {
            "path": ".well-known/webfinger",
            "class": "idpyoidc.server.oidc.discovery.Discovery"
          },
          "federation_info": {
            "path": ".well-known/openid-federation",
            "class": "fedservice.op.provider_config.ProviderConfiguration",
            "kwargs": {
              "client_authn_method": null
            }
          },
          "federation_registration": {
            "path": "registration",
            "class": "fedservice.op.registration.Registration",
            "kwargs": {
              "client_authn_method": null
            }
          },
          "registration_api": {
            "path": "registration_api",
            "class": "idpyoidc.server.oidc.read_registration.RegistrationRead",
            "kwargs": {
              "client_authn_method": [
                "bearer_header"
              ]
            }
          },
          "introspection": {
            "path": "introspection",
            "class": "idpyoidc.server.oauth2.introspection.Introspection",
            "kwargs": {
              "client_authn_method": [
                "client_secret_post"
              ],
              "release": [
                "username"
              ]
            }
          },
          "authorization": {
            "path": "authorization",
            "class": "fedservice.op.authorization.Authorization",
            "kwargs": {
              "client_authn_method": null,
              "claims_parameter_supported": true,
              "request_parameter_supported": true,
              "request_uri_parameter_supported": true,
              "response_types_supported": [
                "code",
                "token",
                "id_token",
                "code token",
                "code id_token",
                "id_token token",
                "code id_token token",
                "none"
              ],
              "response_modes_supported": [
                "query",
                "fragment",
                "form_post"
              ]
            }
          },
          "pushed_authorization": {
            "path": "pushed_authorization",
            "class": "fedservice.op.pushed_authorization.PushedAuthorization",
            "kwargs": {
              "client_authn_method": [
                "client_secret_post",
                "client_secret_basic",
                "client_secret_jwt",
                "private_key_jwt"
              ]
            }
          },
          "token": {
            "path": "token",
            "class": "idpyoidc.server.oidc.token.Token",
            "kwargs": {
              "client_authn_method": [
                "client_secret_post",
                "client_secret_basic",
                "client_secret_jwt",
                "private_key_jwt"
              ]
            }
          },
          "userinfo": {
            "path": "userinfo",
            "class": "idpyoidc.server.oidc.userinfo.UserInfo",
            "kwargs": {
              "claim_types_supported": [
                "normal",
                "aggregated",
                "distributed"
              ]
            }
          },
          "end_session": {
            "path": "session",
            "class": "idpyoidc.server.oidc.session.Session",
            "kwargs": {
              "logout_verify_url": "verify_logout",
              "post_logout_uri_path": "post_logout",
              "signing_alg": "ES256",
              "frontchannel_logout_supported": true,
              "frontchannel_logout_session_supported": true,
              "backchannel_logout_supported": true,
              "backchannel_logout_session_supported": true,
              "check_session_iframe": "check_session_iframe"
            }
          }
        },
        "userinfo": {
          "class": "idpyoidc.server.user_info.UserInfo",
          "kwargs": {
            "db_file": "users.json"
          }
        },
        "authentication": {
          "user": {
            "acr": "idpyoidc.server.user_authn.authn_context.INTERNETPROTOCOLPASSWORD",
            "class": "idpyoidc.server.user_authn.user.UserPassJinja2",
            "kwargs": {
              "verify_endpoint": "verify/user",
              "template": "user_pass.jinja2",
              "db": {
                "class": "idpyoidc.server.util.JSONDictDB",
                "kwargs": {
                  "filename": "passwd.json"
                }
              },
              "page_header": "Testing log in",
              "submit_btn": "Get me in!",
              "user_label": "Nickname",
              "passwd_label": "Secret sauce"
            }
          }
        },
        "cookie_dealer": {
          "class": "idpyoidc.server.cookie.CookieDealer",
          "sign_jwk": {
            "filename": "private/cookie_sign_jwk.json",
            "type": "OCT",
            "kid": "cookie_sign_key_id"
          },
          "kwargs": {
            "default_values": {
              "name": "oidc_op",
              "domain": "op.localhost",
              "path": "/",
              "max_age": 3600
            }
          }
        },
        "login_hint2acrs": {
          "class": "idpyoidc.server.login_hint.LoginHint2Acrs",
          "kwargs": {
            "scheme_map": {
              "email": [
                "idpyoidc.server.user_authn.authn_context.INTERNETPROTOCOLPASSWORD"
              ]
            }
          }
        },
        "add_on": {
          "pkce": {
            "function": "idpyoidc.server.oidc.add_on.pkce.add_pkce_support",
            "kwargs": {
              "essential": false,
              "code_challenge_method": [
                "S256",
                "S384",
                "S512"
              ]
            }
          },
          "extra_args": {
            "function": "idpyoidc.server.oauth2.add_on.extra_args.add_support",
            "kwargs": {
              "authorization": {
                "iss": "issuer"
              }
            }
          },
          "claims": {
            "function": "idpyoidc.server.oidc.add_on.custom_scopes.add_custom_scopes",
            "kwargs": {
              "research_and_scholarship": [
                "name",
                "given_name",
                "family_name",
                "email",
                "email_verified",
                "sub",
                "iss",
                "eduperson_scoped_affiliation"
              ],
              "eduperson_assurance": [
                "eduperson_assurance"
              ],
              "personalized": [
                "sub",
                "name",
                "given_name",
                "family_name",
                "email",
                "email_verified",
                "eduperson_affiliation",
                "schac_home_organization",
                "eduperson_assurance"
              ]  
            }
          },
          "automatic_registration": {
            "function": "fedservice.op.add_on.automatic_registration.add_support",
            "kwargs": {
              "new_id": false,
              "client_registration_authn_methods_supported": {
                "ar": [
                  "request_object"
                ]
              },
              "where": [
                "authorization"
              ]
            }
          }
        }
    }
  }
}